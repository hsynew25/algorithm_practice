import sys
from collections import deque

input = sys.stdin.readline

dx = [-1,1,0,0,-1,-1,1,1]
dy = [0,0,-1,1,-1,1,-1,1]

def bfs(sx,sy):
    queue = deque()
    queue.append([sx,sy])

    while len(queue)!=0:
        x,y = queue.popleft()
        for i in range(8):
            nx = x+dx[i]
            ny = y+dy[i]
            if nx<0 or ny<0 or nx>=h or ny>=w:
                continue
            if arr[nx][ny]==1 and visited[nx][ny]==False:
                visited[nx][ny]=True
                queue.append([nx,ny])

while True:
    w,h = map(int,input().split())
    if w==0 and h==0:
        break
    arr = [list(map(int,input().split())) for row in range(h)]
    visited = [[False for col in range(w)] for row in range(h)]

    cnt = 0
    for i in range(h):
        for j in range(w):
            if arr[i][j]==1 and visited[i][j]==False:
                visited[i][j]=True
                bfs(i,j)
                cnt+=1
    print(cnt, end="\n")